[tox]
skip_missing_interpreters = true
isolated_build = true
envlist =
    py3{7,8,9}

[testenv]
description = Run test suite under {basepython}
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
    PY_COLORS = 1
deps = -r requirements-dev.txt
passenv =
    http_proxy
    https_proxy
    no_proxy
commands = pytest \
           --benchmark-disable \
           --junitxml={toxworkdir}/junit.{envname}.xml \
           --basetemp={envtmpdir} \
           -n={env:PYTEST_XDIST_PROC_NR:auto} \
           {posargs:tests}
parallel_show_output = True

[testenv:py3{7,8,9}-benchmark]
description = Run performance testing under {basepython}
setenv = {[testenv]setenv}
deps = {[testenv]deps}
passenv = {[testenv]passenv}
allowlist_externals = bash
commands =
# Run benchmark in a shell to incorporate dynamic tag in output file names
    bash -c '\
        BENCHMARK_FILE_TAG=$(make strong-version-tag); \
        BENCHMARK_FILE_PREFIX="{toxinidir}/.benchmarks/{envname}/$\{BENCHMARK_FILE_TAG\}"; \
        mkdir -p $\{BENCHMARK_FILE_PREFIX%/*\}; \
        pytest \
            --basetemp={envtmpdir} \
            --benchmark-cprofile=cumtime \
            --benchmark-disable-gc \
            --benchmark-histogram="$\{BENCHMARK_FILE_PREFIX\}" \
            --benchmark-json="$\{BENCHMARK_FILE_PREFIX\}".json \
            --benchmark-only \
            --benchmark-save="$\{BENCHMARK_FILE_TAG\}" \
            --benchmark-save-data \
            --benchmark-sort=mean \
            --benchmark-verbose \
            {posargs:tests}'
parallel_show_output = {[testenv]parallel_show_output}

[testenv:precommit]
description = Run `pre-commit` hooks to auto-format and lint the codebase
deps =
    pre-commit
    icontract
    mypy
    pylint
    pytest
    sphinx
    typeguard
    -r requirements.txt
skip_install = true
; For shfmt
setenv = GOCACHE={envdir}/go-build
passenv =
    HOMEPATH  # needed on Windows
    PROGRAMDATA  # needed on Windows
    SKIP # hook ids to skip
    TERM # (e.g. for mypy color output (https://github.com/tox-dev/tox/issues/1441#issuecomment-548063521))
commands = pre-commit run {posargs} -vv --all-files --color always
           python -c 'print("hint: run `make install-pre-commit-hooks` to add checks as pre-commit hook")'

[testenv:security]
skip_install = true
deps = safety
commands = safety check --full-report -r {toxinidir}/requirements-all.txt

[testenv:docs]
extras =
    docs
passenv = TERM
setenv =
    PYTHONHASHSEED = 0
commands =
    sphinx-build -n -T -W -b html -d {envtmpdir}/doctrees docs/source docs/_build/html
    sphinx-build -n -T -W -b doctest -d {envtmpdir}/doctrees docs/source docs/_build/html

;Tooling configs
[mypy]
ignore_missing_imports = True
pretty = True
show_column_numbers = True
show_error_context = True
show_error_codes = True
