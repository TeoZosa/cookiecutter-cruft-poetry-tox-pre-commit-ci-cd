---
repos:
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.0
    hooks:
      - id: bandit
        exclude: tests/.*$

  # For IDE-integration outside of the pre-commit hook,
  # see: https://black.readthedocs.io/en/stable/editor_integration.html
  - repo: https://github.com/ambv/black
    rev: 21.6b0
    hooks:
      - id: black

  - repo: https://github.com/cruft/cruft
    rev: 2.8.0
    hooks:
      - id: cruft
        name: cruft
        language: system
        # Log status but always succeed, providing downstream project
        # maintainers template synchronization discretion.
        # see: https://stackoverflow.com/a/59745587
        verbose: true
        entry: bash -c 'cruft check || true' --

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.1.0
    hooks:
      - id: detect-secrets
        exclude: ^(poetry\.lock|\.cruft\.json)$
        # {%- if cookiecutter.jupyter_notebook_support == 'yes' %}
        exclude_types: [jupyter]
        # {%- endif %}

  - repo: https://github.com/flakehell/flakehell
    rev: v.0.8.0
    hooks:
      - id: flakehell
        exclude_types: [jupyter]

  # Docstring coverage tool
  - repo: https://github.com/econchick/interrogate
    rev: 1.4.0
    hooks:
      - id: interrogate
        # adjust `fail-under` value as quality standards permit
        args: [-vv, --config=pyproject.toml]

  - repo: https://github.com/timothycrosley/isort
    rev: 5.8.0
    hooks:
      - id: isort

  - repo: https://github.com/Lucas-C/pre-commit-hooks-nodejs
    rev: v1.1.1
    hooks:
      - id: markdown-toc
        args: [--maxdepth=3, -i]
        exclude: ^(docs/source/.*)$

  - repo: local
    hooks:
      - id: mypy
        name: mypy
        language: system
        entry: .tox/precommit/bin/mypy
        args: [--cache-dir=/dev/null, --config-file=pyproject.toml]
        types: [python]

  # {%- if cookiecutter.jupyter_notebook_support == 'yes' %}
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 0.12.0
    hooks:
      - id: nbqa-black
        args: [--nbqa-mutate]
        additional_dependencies: [black==21.6b0]
      - id: nbqa-isort
        args: [--nbqa-mutate]
        additional_dependencies: [isort==5.8.0]
      - id: nbqa-pyupgrade
        args: [--nbqa-mutate]
        additional_dependencies: [pyupgrade==v2.19.4]

  - repo: local
    hooks:
      - id: nbqa-bandit
        name: nbqa-bandit
        description: "Run tox env `bandit` on a Jupyter Notebook"
        entry: .tox/precommit/bin/nbqa bandit
        language: system
        types: [jupyter]

  ## Override nbqa pre-packaged hooks to preempt spurious "Module not found"
  ## errors

  # See: https://mypy.readthedocs.io/en/latest/running_mypy.html#missing-imports
  - repo: local
    hooks:
      - id: nbqa-mypy
        name: nbqa-mypy
        description: "Run tox env `mypy` on a Jupyter Notebook"
        entry: .tox/precommit/bin/nbqa mypy
        # yamllint disable-line rule:line-length
        args: [--cache-dir=/dev/null, --config-file=pyproject.toml]
        language: system
        types: [jupyter]

  # Note: submit docs for this to nbqa?
  # ex. https://nbqa.readthedocs.io/en/latest/pre-commit.html
  # referencing:
  # yamllint disable-line rule:line-length
  #   [Remove pylint config E0401 and make pylint a local pre-commit hook #229](https://github.com/nbQA-dev/nbQA/pull/229/files)

  # E0401: import-error
  - repo: local
    hooks:
      - id: nbqa-pylint
        name: nbqa-pylint
        description: "Run tox env `pylint` on a Jupyter Notebook"
        entry: .tox/precommit/bin/nbqa pylint
        language: system
        types: [jupyter]
  # {%- endif %}

  - repo: local
    hooks:
      - id: pylint
        name: pylint
        language: system
        entry: .tox/precommit/bin/pylint
        args: [--rcfile=pyproject.toml]
        types: [python]

  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 2.1.5
    hooks:
      - id: script-must-have-extension
      - id: script-must-not-have-extension

  - repo: https://github.com/asottile/pyupgrade
    rev: v2.19.4
    hooks:
      - id: pyupgrade
        args: [--py38-plus]

  - repo: local
    hooks:
      - id: shfmt
        name: shfmt
        minimum_pre_commit_version: 2.4.0
        language: golang
        additional_dependencies: [mvdan.cc/sh/v3/cmd/shfmt@v3.1.2]
        entry: shfmt
        args: [-w]
        types: [shell]

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.26.1
    hooks:
      - id: yamllint

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.0.1
    hooks:
      - id: check-added-large-files  # Ignored for git-lfs files
        args: [--maxkb=100000]  # 100MB
      - id: check-ast
      - id: debug-statements
      - id: end-of-file-fixer  # Ensure files ONLY end in a newline
        exclude_types: [jupyter]
      - id: pretty-format-json  # Sort and indent
        args: [--autofix]
        exclude: ^(\.cruft\.json)$
      - id: trailing-whitespace  # Trim
        args: [--markdown-linebreak-ext=md]
